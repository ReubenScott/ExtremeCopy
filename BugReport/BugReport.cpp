/****************************************************************************

Copyright (c) 2008-2020 Kevin Wu (Wu Feng)

github: https://github.com/kevinwu1024/ExtremeCopy
site: http://www.easersoft.com

Licensed under the Apache License, Version 2.0 License (the "License"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at

https://opensource.org/licenses/Apache-2.0

****************************************************************************/


#include "stdafx.h"
#include "BugReport.h"
#include "XCBugReportDlg.h"
#include "../ExtremeCopy/App/XCGlobal.h"
#include "../ExtremeCopy/App/XCConfiguration.h"
#include "XZip.h"
#include "CSmtp.h"

#define SMTP_SERVER					"smtp.gmail.com"
#define SMTP_PORT					465
#define BUG_EMAIL_ADDRESS			"<your email>@gmail.com"	// your email address
#define BUG_EMAIL_USERNAME			"<your email>"				// your email account
#define BUG_EMAIL_PASSWORD			"<your email password>"		// your email password


bool SendEmailWithDump(CptString strDumpFile,const SUserSituationInfo& usi) ;
bool LoadXCResource(SConfigData* pConfigData)  ;
void SendEmail(const SUserSituationInfo& usi) ;


int APIENTRY _tWinMain(HINSTANCE hInstance,
                     HINSTANCE hPrevInstance,
                     LPTSTR    lpCmdLine,
                     int       nCmdShow)
{
	try
	{
		SConfigData*	pConfigData = new SConfigData();

		//读取配置
		CXCConfiguration::GetInstance()->LoadConfigDataFromFile(*pConfigData) ;

		if(::LoadXCResource(pConfigData))
		{// 加载语言资源
			CXCBugReportDlg dlg ;

			if(dlg.ShowDialog()==CptDialog::DialogResult_OK)
			{
				SUserSituationInfo usi = dlg.GetUserContent() ;

				WIN32_FIND_DATA wfd ;
				HANDLE hFind = ::FindFirstFile(lpCmdLine,&wfd) ;

				// 如果是因crash 而 launch bug report的话，则将带有 dump 文件
				if(hFind!=INVALID_HANDLE_VALUE && wfd.nFileSizeHigh==0 && wfd.nFileSizeLow<100*1024)
				{
					::FindClose(hFind) ;
					::SendEmailWithDump(lpCmdLine,usi) ;
					::DeleteFile(lpCmdLine) ;
				}
				else
				{// 
					if(usi.m_strProblemContent.GetLength()>0)
					{// 如果不是带有dump文件，则该邮件必须要有内容才能发送
						::SendEmail(usi) ;
					}
				}
			}
		}

		CptMultipleLanguage::Release() ;
		CXCConfiguration::Release() ;

		SAFE_DELETE_MEMORY(pConfigData) ;
	}
	catch(...)
	{
	}
	
	return 0 ;
}

void SendEmail(const SUserSituationInfo& usi)
{
	CSmtp mail;

	mail.SetSMTPServer(SMTP_SERVER,SMTP_PORT);
	mail.SetSecurityType(CSmtp::USE_SSL);

	mail.SetLogin(BUG_EMAIL_USERNAME);
	mail.SetSenderMail(BUG_EMAIL_ADDRESS);
	mail.SetPassword(BUG_EMAIL_PASSWORD);

	mail.AddRecipient(BUG_EMAIL_ADDRESS) ;

	mail.SetSenderName("product reporter");
	mail.SetXPriority(XPRIORITY_NORMAL);

	mail.SetSubject("bug report") ;
	mail.AddMsgLine("hi, this report was generated by ExtremeCopy bug reportor !") ;

	if(usi.m_strEmail.GetLength()>0)
	{
		CptStringA str = usi.m_strEmail ;
		mail.AddMsgLine(str.c_str()) ;
	}

	if(usi.m_strProblemContent.GetLength()>0)
	{
		CptStringA str = usi.m_strProblemContent ;
		mail.AddMsgLine(str.c_str()) ;
	}

	mail.Send() ;
}


bool SendEmailWithDump(CptString strDumpFile,const SUserSituationInfo& usi)
{
	bool bRet = false ;

	TCHAR szTemPath[MAX_PATH] = {0} ;

	::GetTempPath(sizeof(szTemPath)/sizeof(TCHAR),szTemPath) ;

	int nLen = _tcslen(szTemPath) ;

#pragma warning(push)
#pragma warning(disable:4996)
	if(szTemPath[nLen-1]!='\\' && szTemPath[nLen-1]!='/')
	{
		::_tcscat(szTemPath,_T("\\")) ;
	}

	::_tcscat(szTemPath,_T("ExtremeCopyDump.zip")) ;

#pragma warning(pop)

	HZIP hzip = ::CreateZip(szTemPath,0,ZIP_FILENAME) ;

	if(hzip!=NULL)
	{
		ZRESULT result = ::ZipAdd(hzip,(LPCTSTR)_T("ExtremeCopy.dmp"),(void*)(LPCTSTR)strDumpFile,0,ZIP_FILENAME) ;
		::CloseZip(hzip) ;
		hzip = NULL ;

		if(result==ZR_OK)
		{
			CSmtp mail;

			mail.SetSMTPServer(SMTP_SERVER,SMTP_PORT);
			mail.SetSecurityType(CSmtp::USE_SSL);

			mail.SetLogin(BUG_EMAIL_ADDRESS);
			mail.SetSenderMail(BUG_EMAIL_ADDRESS);
			mail.SetPassword(BUG_EMAIL_PASSWORD);

			/**
			mail.SetLogin("support@easersoft.com");
			mail.SetSenderMail("support@easersoft.com");
			mail.SetPassword(",y^vT}5BJ%.*");
			/**/

			mail.AddRecipient(BUG_EMAIL_ADDRESS) ;

			mail.SetSenderName("product reporter");
			mail.SetXPriority(XPRIORITY_NORMAL);
			
			
			CptString strTitle = _T("bug report");

			// 获取 ExtremeCopy 当前的版本号
			SptVerionInfo vi;
			CptString strMainPEFile = CptWinPath::GetStartupPath() + _T("\\ExtremeCopy.exe");

			if(CptGlobal::GetPEFileVersion(strMainPEFile.c_str(),vi))
			{
				CptString strVersion;

				strVersion.Format(_T("-- v%d.%d.%d.%d"),vi.nMajor,vi.nMin,vi.nFix,vi.nBuild);

				strTitle += strVersion;

				OSVERSIONINFO oi ;

				::memset(&oi,0,sizeof(OSVERSIONINFO)) ;

				oi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO) ;

				if(::GetVersionEx(&oi))
				{	
					strVersion.Format(_T("Windows %d.%d.%d - %s"),oi.dwMajorVersion,oi.dwMinorVersion,oi.dwBuildNumber,
						CptGlobal::IsWow64()?_T("x64"):_T("x86"));

					strTitle += _T("--") + strVersion;
				}
			}

			CptStringA strTitleA = strTitle.c_str();
			mail.SetSubject(strTitleA.c_str()) ;

			mail.AddMsgLine("hi, this report was generated by ExtremeCopy bug reportor !") ;

			if(usi.m_strEmail.GetLength()>0)
			{
				CptStringA str = usi.m_strEmail ;
				mail.AddMsgLine(str.c_str()) ;
			}

			if(usi.m_strProblemContent.GetLength()>0)
			{
				CptStringA str = usi.m_strProblemContent ;
				mail.AddMsgLine(str.c_str()) ;
			}

#ifdef _UNICODE
			char szTemDumpPath[MAX_PATH] = {0} ;
			int nLenOfByte = (int)::wcslen(szTemPath)*sizeof(wchar_t) ;

			::WideCharToMultiByte(CP_ACP, 0, szTemPath, nLenOfByte/sizeof(wchar_t) , 
				(char*)szTemDumpPath,sizeof(szTemDumpPath), NULL, NULL);

			mail.AddAttachment(szTemDumpPath) ;
			mail.Send() ;
			::DeleteFileA(szTemDumpPath) ;
#else
			mail.AddAttachment(szTemPath) ;
			mail.Send() ;
			::DeleteFile(szTemPath) ;
#endif
			bRet = true ;
			
		}
	}

	return bRet ;
}


// 加载资源
bool LoadXCResource(SConfigData* pConfigData) 
{
	_ASSERT(pConfigData) ;

	// 查找资源 DLL
	CptString strStartUpPath = CptWinPath::GetStartupPath() ;

	CptString strLanguagePath = strStartUpPath+ _T("\\Language") ;

	CptString strDll = strLanguagePath + _T("\\") + pConfigData->strResourceDLL ;

	if(!IsFileExist(strDll.c_str()))
	{
		typedef pt_STL_map(std::basic_string<TCHAR>,std::basic_string<TCHAR>)	Str2StrMap_t ; 

		Str2StrMap_t LanguageName2DLLNameMap ;

		::SearchResourceDLL(LanguageName2DLLNameMap,strLanguagePath) ;

		if(!LanguageName2DLLNameMap.empty())
		{
			//::_stprintf(szFileName,_T("%s\\%s"),strLanguagePath.c_str(),(*LanguageName2DLLNameMap.begin()).second.c_str()) ;

			pConfigData->strResourceDLL = (*LanguageName2DLLNameMap.begin()).second.c_str() ;

			CXCConfiguration::GetInstance()->SaveConfigDataToFile(*pConfigData) ;
		}
		else
		{
			::MessageBox(NULL,_T("Can't load resource file !"),NULL,MB_OK) ;
			return false ;
		}
	}

	// 加载语言
	CptMultipleLanguage::GetInstance(pConfigData->strResourceDLL.c_str()) ;

	return true ;
}
